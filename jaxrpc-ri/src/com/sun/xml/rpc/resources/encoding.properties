#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#
# $Id: encoding.properties,v 1.1 2006-04-12 20:32:21 kohlert Exp $
#

#nested
nestedSerializationError=serialization error: {0}
nestedDeserializationError=deserialization error: {0}
nestedEncodingError=encoding error: {0}

#soap
soap.malformedArrayType=malformed array type: {0}
soap.tooManyArrayElements=serialized array has too many elements
soap.illegalArrayElementPosition=illegal array element position: {0}
soap.missingArrayElementPosition=missing array element position
soap.outOfBoundsArrayElementPosition=array element position is out of bounds: {0}
soap.unexpectedNull=unexpected null
soap.unexpectedReference=unexpected reference
soap.unexpectedElementName=unexpected element name: expected={0}, actual={1}
soap.unexpectedElementType=unexpected element type: expected={0}, actual={1}
soap.unexpectedArrayElementType=unexpected array element type: expected={0}, actual={1}
soap.nonLocalReference=non-local reference (href): {0}
soap.context.not.soapSerialization=non-SOAP serialization context
soap.context.not.soapDeserialization=non-SOAP deserialization context
soap.missingTrailingBlockID=trailing block elements must have an id attribute
soap.missingContentID=attachments must have a Content-ID attribute
soap.malformedArrayDimensions=malformed array dimensions: {0}
soap.irregularMultiDimensionalArray=multi-dimensional array is not regular
soap.illegalArrayOffset=illegal array offset: {0}
soap.unexpectedArrayRank=array has unexpected rank: expected={0}, actual={1}, arrayType={2}
soap.unexpectedArrayDimensions=array has unexpected dimensions: expected={0}, actual={1}, arrayType={2}
soap.unexpectedEncodingStyle=unexpected encoding style: expected={0}, actual={1}
soap.unspecifiedType=cannot encode XML type because it was not specified
soap.duplicate.data.member=member {0} has already been defined
soap.incompleteObject=incomplete object encountered while deserializing
soap.circularReferenceDetected=circular reference detected while serializing: {0}
soap.missing.attachment.for.id=no attachment with id \"{0}\" found in message
soap.multiple.attachments.for.id=multiple attachments with the same id \"{0}\" found in message
soap.no.attachment.encoder.and.serializeAsAttachment=serializeAsAttachment specified but no AttachmentEncoder was provided for type: \"{0}\"
soap.state.wont.notify.without.deserializer=internal error: a deserializer must be registered with a deserialization state before it will accept listeners
soap.unsupportedType=cannot decode XML type \"{0}\"
soap.cannot.serialize.type=cannot serialize type \"{0}\"

# xsd
xsd.unexpectedElementName=unexpected element name: expected={0}, actual={1}
xsd.unexpectedElementType=unexpected element type: expected={0}, actual={1}
xsd.unexpectedNull=unexpected null
xsd.unknownPrefix=unknown prefix in QName literal: {0}
xsd.invalid.date=invalid date: {0}
xsd.invalid.boolean=invalid boolean value: {0}

#msgs for new types
xsd.invalid.time=invalid time value: {0}
xsd.invalid.positiveInteger=invalid positiveInteger value: {0}
xsd.invalid.nonNegativeInteger=invalid nonNegativeInteger value: {0}
xsd.invalid.negativeInteger=invalid negativeInteger value: {0}
xsd.invalid.nonPositiveInteger=invalid nonPositiveInteger value: {0}
xsd.invalid.unsignedLong=invalid unsignedLong value: {0}
xsd.invalid.unsignedInt=invalid unsignedInt value: {0}
xsd.invalid.unsignedShort=invalid unsignedShort value: {0}
xsd.invalid.unsignedByte=invalid unsignedByte value: {0}
xsd.invalid.listType=invalid simple tpye in xsd\:list value: {0}
xsd.duplicateID=xsd:ID validation error, duplicate ID: {0} found

# typemapping
typemapping.nested.exception=type mapping error: {0}
typemapping.nested.exception.static.initialization=type mapping static initialization error: {0}
typemapping.mechanism.unsupported={0} : is not a supported (de)serialization mechanism
typemapping.registration.failed.nested.exception=type mapping registration failed: {0}
typemapping.retrieval.failed.nested.exception=type mapping retrieval failed: {0}
typemapping.mappingDoesNotSupportEncoding=type mapping does not support the specified encoding: {0}
typemapping.noMappingForEncoding=there is no type mapping for the specified encoding: {0}
typemapping.serializerNotRegistered=no serializer is registered for ({0}, {1})
typemapping.deserializerNotRegistered=no deserializer is registered for ({0}, {1})
typemapping.serializer.is.dynamic=dynamic resolution failed to find a serializer for java type:{0}, xml type {1}
typemapping.serializer.definition.recursive=dynamic resolution found a recursive definition for java type: {0}, xmlType: {1}
typemapping.deserializer.is.dynamic=dynamic resolution failed to find a deserializer for {0}
typemapping.not.serializable=Could not serialze registry, type: {0} does not extend Serializable

# typemappingregistry
typemappingregistry.not.serializable=Could not serialze internal registry, type: {0} does not extend Serializable

# literal
literal.unexpectedNull=unexpected null value for literal data
literal.unexpectedElementName=unexpected element name: expected={0}, actual={1}
literal.expectedElementName=expected element is missing: {0}
literal.missingRequiredAttribute=missing required attribute: {0}
literal.simpleContentExpected=expected simple content, found element name: {0}
literal.notIdentifiableObject=expected object with xsd:ID attribute, got: {0}
literal.requiredAttributeConstraint=The required attribute: \"{0}\" can not be null


# initializable
initializable.not.initialized=object not initialized before use

type.is.not.array={0} is not an array type

request.parameter.count.incorrect=expected {0} parameter(s) but received: {1}. Expected parameters: {2} Got parameters:{3}
deserializationstate.deserialize.no.deserializer=illegal deserialization state: no deserializer is available for the current element
