
# Generator
generator.nestedGeneratorError=generator error: {0}
generator.cant.write=can''t write file: {0}
generator.cannot.create.dir=can''t create directory: {0}
generator.array.of.array.not.supported=arrays of arrays are not supported.
generator.unsupported.type.encountered=unsupported type encountered: {0} (ns: {1})
generator.internal.processing.error.port=there has been an internal processing error on port: {0}
generator.invalid.model.state.no.javatype=no JavaType for type: {0}
generator.invalid.serializerinfo=invalid serializerInfo for type: {0}, serializerInfo: {1}
generator.unsupported.encoding.encountered=unsupported encoding encountered: {0}
generator.internal.error.should.not.happen=internal error (should not happen): {0}
generator.literalTypesNotSupported=literal types are not supported: {0} (ns: {1})

# stub
generator.stub.invalid.port.address=invalid port address: {0}
generator.stub.generating.stub=generating Stub: {0}...

# tie
generator.tie.cannot.dispatch=cannot dispatch operation: {0}
generator.tie.operation.nameNotUnique=cannot generate tie class: non-unique operation name detected: {0}
generator.tie.port.cannot.dispatch=cannot dispatch to port(non-unique operations names and non-unique SOAPAction strings): {0}
generator.tie.generating.tie=generating Tie: {0}...


# remoteInterface
generator.remoteInterface.invalidOperation=invalid operation: {0}
generator.remoteInterface.multipleOutputParameters=multiple \"out\" parameters in operation: {0}
generator.remoteInterface.resultIsInOutParameter=result is \"inout\" parameter in operation: {0}
generator.remoteInterface.notSoapType=not a SOAP type: \"{0}\"

# simpleTypeSerializerWriter
generator.simpleTypeSerializerWriter.no.encoder.for.type=no encoder for type \"{0}\" and Java type \"{1}\"
generator.simpleTypeSerializerWriter.invalidType=Invalid type in xsd\:list type \"{0}\" and Java type \"{1}\"

# serializerRegistryGenerator
generator.serializerRegistryGenerator.warning.no.standard.simpletype.serialzer=no serializer found for simpletype \"{0}\" and Java type \"{1}\" in StandardSerializerRegistry

#IndentingWriter
generator.indentingwriter.charset.cantencode=WSDL has some characters which native java encoder can''t encode: \"{0}\"