

#EN: Usage: {0} [options] configuration_file\n\nUse "wscompile -help" for a detailed description of options.
wscompile.usage=Verwendung: {0} [options] configuration_file\n\nEine detaillierte Beschreibung der Optionen erhalten Sie \u00fcber "wscompile -help".

#EN: \nUsage: {0} [options] configuration_file\n\n\where [options] include:\n\  -classpath <path>         specify where to find input class files\n\  -cp <path>                same as -classpath <path>\n\  -d <directory>            specify where to place generated output files\n\  -define                   define a service\n\  -f:<features>             enable the given features (see below)\n\  -features:<features>      same as -f:<features>\n\  -g                        generate debugging info\n\  -gen                      same as -gen:client\n\  -gen:client               generate client artifacts (stubs, etc.)\n\  -gen:server               generate server artifacts (ties, etc.)\n\  -help                     display help\n\  -source <version>         generate code for the specified JAXRPC SI version.\n\                            supported versions are: 1.0.1, 1.0.3, 1.1, 1.1.1 and 1.1.2(default)\n\  -httpproxy:<host>:<port>  specify a HTTP proxy server (port defaults to 8080)\n\  -import                   generate interfaces and value types only\n\  -keep                     keep generated files\n\  -model <file>             write the internal model to the given file\n\  -nd <directory>           specify where to place non-class generated files\n\  -O                        optimize generated code\n\  -s <directory>            specify where to place generated source files\n\  -verbose                  output messages about what the compiler is doing\n\  -version                  print version information
wscompile.help=\nVerwendung: {0} [options] configuration_file\n\n\wobei [options] Folgendes enthalten:\n\  -classpath <Pfad>         angeben, wo sich Eingabeklassendateien befinden\n\  -cp <Pfad>                identisch mit -classpath <Pfad>\n\  -d <Verzeichnis>            angeben, wo die generierten Ausgabedateien zu platzieren sind\n\  -define                   einen Dienst definieren\n\  -f:<Funktionen>             angegebene Funktionen aktivieren (siehe unten)\n\  -features:<Funktionen>      identisch mit -f:<Funktionen>\n\  -g                        Debuginformationen generieren\n\  -gen                      identisch mit -gen:client\n\  -gen:client               Client-Artefakte generieren (Stubs usw.)\n\  -gen:server               Server-Artefakte generieren (Ties usw.)\n\  -help                     Hilfe anzeigen\n\  -source <Version>         Code f\u00fcr die angegebene JAXRPC SI-Version generieren.\n\                            unterst\u00fctzte Versionen sind: 1.0.1, 1.0.3, 1.1, 1.1.1 und 1.1.2 (Standard)\n\  -httpproxy:<Host>:<Anschluss>  HTTP-Proxy-Server angeben (Anschlussstandard ist 8080)\n\  -import                   Nur Schnittstelle und Wertetypen generieren\n\  -keep                     generierte Dateien beibehalten\n\  -model <Datei>             internes Modell in die angegebene Datei schreiben\n\  -nd <Verzeichnis>           angeben, wo die generierten nicht-Klassen-Dateien abgelegt werden sollen\n\  -O                        generierten Code optimieren\n\  -s <Verzeichnis>            angeben, wo die generierten Quelldateien abgelegt werden sollen\n\  -verbose                  Meldung \u00fcber Compilert\u00e4tigkeit ausgeben\n\  -version                  Versionsinformationen drucken

#EN: \n\Exactly one of the -import, -define, -gen options must be specified.\n\ \n\The -f option requires a comma-separated list of features.\n\ \n\Supported features (-f):\n\  datahandleronly           always map attachments to the DataHandler type\n\  documentliteral           use document literal encoding\n\  rpcliteral                use rpc literal encoding\n\  explicitcontext           turn on explicit service context mapping\n\  infix:<name>              specify an infix to use for generated ties\n\                            and serializers\n\  infix=<name>              same as infix:<name> (not on Windows)\n\  jaxbenumtype              map anonymous enumeration to its base type.\n\  nodatabinding             turn off data binding for literal encoding\n\  noencodedtypes            turn off encoding type information\n\  nomultirefs               turn off support for multiple references\n\  norpcstructures           do not generate RPC structures (-import only)\n\  novalidation              turn off full validation of imported WSDL documents\n\  resolveidref              resolve xsd:IDREF\n\  searchschema              search schema aggressively for subtypes\n\  serializeinterfaces       turn on direct serialization of interface types\n\  strict                    generate code strictly compliant with the JAXRPC\n\                            1.1 specification\n\  useonewayoperations       allow generation of one-way operations\n\  wsi                       enable 'WSI-Basic Profile' features (for\n\                            document/literal and rpc/literal)\n\  unwrap                    enable 'unWrapping' of document/literal\n\                            wrapper elements in wsi mode\n\  donotoverride             donot regenerate the classes\n\  donotunwrap               disable 'unWrapping' of document/literal\n\                            wrapper elements in wsi mode (Default)
wscompile.usage.features=\n\Genau eine der Optionen -import, -define und -gen muss angegeben werden.\n\ \n\Die Option -f option erfordert eine durch Kommas getrennte Liste der Funktionen.\n\ \n\Unterst\u00fctzte Funktionen (-f):\n\  datahandleronly           Anlagen stets dem DataHandler-Typ zuordnen\n\  documentliteral           Dokument/Literalkodierung verwenden\n\  rpcliteral                RPC-Literalkodierung verwenden\n\  explicitcontext           explizite Dienstkontextzuordnung einschalten\n\  infix:<Name>              Infix f\u00fcr generierte Ties\n\                            und Serialisierung angeben\n\  infix=<Name>              identisch mit Infix:<Name> (nicht auf Windows)\n\  jaxbenumtype              anonyme Aufz\u00e4hlung zu ihrem Basistyp zuordnen.\n\  nodatabinding             Datenbindung f\u00fcr Literalkodierung ausschalten\n\  noencodedtypes            Kodierungstypinformationen ausschalten\n\  nomultirefs               Unterst\u00fctzung f\u00fcr mehrere Referenzen ausschalten\n\  norpcstructures           keine RPC-Strukturen generieren (nur -import)\n\  novalidation              vollst\u00e4ndige \u00dcberpr\u00fcfung von importierten WSDL-Dokumenten ausschalten\n\  resolveidref              xsd:IDREF aufl\u00f6sen\n\  searchschema              Schema aggressiv nach Untertypen durchsuchen\n\  serializeinterfaces       direkte Serialisierung von Schnittstellentypen einschalten\n\  strict                    Code absolut kompatibel mit JAXRPC generieren\n\                            1.1 specification\n\  useonewayoperations       Generierung von einseitigen Vorg\u00e4ngen\n\  wsi                       'WSI-Basic Profile'-Funktionen aktivieren (f\u00fcr\n\                            document/literal und rpc/literal)\n\  unwrap                    'unWrapping' von document/literal-\n\                            Wrapper-Elementen im WSI-Modus aktivieren\n\  donotoverride             Klassen nicht neu generieren\n\  donotunwrap               'unWrapping' von document/literal-\n\                            Wrapper-Elementen im WSI-Modus deaktivieren (Standard)

#EN: \n\Internal options (unsupported):\n\  -Xdebugmodel:<file>       write a readable version of the model to a file\n\  -Xprintstacktrace         print exception stack traces\n\  -Xserializable            generate value types that implement Serializable interface
wscompile.usage.internal=\n\Interne Optionen (nicht unterst\u00fctzt):\n\  -Xdebugmodel:<Datei>       lesbare Version des Modells in eine Datei schreiben\n\  -Xprintstacktrace         Ausnahmestapelablaufverfolgung drucken\n\  -Xserializable            Werttypen generieren, die die Serializable-Schnittstelle implementieren

#EN: \n\Examples:\n\  wscompile -gen -classpath lib/foo.jar;lib/bar.jar -d generated config.xml\n\  wscompile -gen  -f:infix:Name -d generated config.xml\n\  wscompile -define -f:nodatabinding -f:novalidation config.xml\n\  wscompile -import -f:explicitcontext config.xml\n
wscompile.usage.examples=\n\Beispiele:\n\  wscompile -gen -classpath lib/foo.jar;lib/bar.jar -d generierte config.xml\n\  wscompile -gen  -f:infix:Name -d generierte config.xml\n\  wscompile -define -f:nodatabinding -f:novalidation config.xml\n\  wscompile -import -f:explicitcontext config.xml\n

#
# Generic Messages
#
#EN: {0} ({1}, build {2})
wscompile.version={0} ({1}, Build {2})
#EN: {0} is an invalid option or argument
wscompile.invalidOption={0} ist eine ung\u00fcltige Option bzw. ein ung\u00fcltiges Argument
#EN: only one configuration file can be specified: {0}
wscompile.multipleConfigurationFiles=Es kann nur eine Konfigurationsdatei angegeben werden: {0}
#EN: error: file not found: {0}
wscompile.fileNotFound=Fehler: Datei nicht gefunden: {0}
#EN: error: {0}
wscompile.error=Fehler: {0}
#EN: warning: {0}
wscompile.warning=Warnung: {0}
#EN: info: {0}
wscompile.info=Info: {0}
#EN: missing configuration file
wscompile.missingConfigurationFile=Fehlende Konfigurationsdatei
#EN: duplicate option: {0}
wscompile.duplicateOption=Doppelte Option: {0}
#EN: directory not found: {0}
wscompile.noSuchDirectory=Verzeichnis nicht gefunden: {0}
#EN: option \"{0}\" requires an argument
wscompile.missingOptionArgument=F\u00fcr die Option \"{0}\" ist ein Argument erforderlich
#EN: cannot create model file: {0}
wscompile.invalidModel=Modelldatei kann nicht erstellt werden: {0}
#EN: cannot create file: {0}
wscompile.invalidPath=Datei kann nicht erstellt werden: {0}
#EN: unknown feature: {0}
wscompile.unknownFeature=Unbekannte Funktion: {0}
#EN: unknown option: {0}
wscompile.unknownOption=Unbekannte Option: {0}
#EN: invalid feature syntax: {0}
wscompile.invalidFeatureSyntax=Ung\u00fcltige Funktionssyntax: {0}
#EN: compilation failed, errors should have been reported
wscompile.compilationFailed=Kompilierung fehlgeschlagen, die Fehler wurden gemeldet
#EN: no mode was specified, please use one of -import/-define/-gen
wscompile.noModeSpecified=Es wurde kein Modus angegeben, w\u00e4hlen Sie zwischen -import/-define/-gen
#EN: too many modes were specified, please use only one of -import/-define/-gen
wscompile.tooManyModesSpecified=Es wurden zu viele Modi angegeben, w\u00e4hlen Sie nur eine der Optionen -import/-define/-gen
#EN: -import requires a WSDL-based configuration file
wscompile.importRequiresWsdlConfig=F\u00fcr -import ist eine WSDL-basierte Konfigurationsdatei erforderlich
#EN: -define requires a service-based configuration file
wscompile.defineRequiresServiceConfig=F\u00fcr -define ist eine dienstbasierte Konfigurationsdatei erforderlich
#EN: Due to insufficient information in jaxrpc-ri.xml endpoint: {0} will not be mapped to a port so please provide portName in jaxrpc-ri.xml for endpoint: {0}
wscompile.warning.noportInfo=Aufgrund unzureichender Informationen in jaxrpc-ri.xml-Endpunkt: wird {0} nicht zu einem Anschluss zugeordnet. Geben Sie daher in jaxrpc-ri.xml den portName f\u00fcr folgenden Endpunkt ein: {0}
#EN: You have specified : -gen:both or -gen:client with a SEI. The use of these modes are recommended with WSDL only.
wscompile.warning.seimode=Sie haben angegeben : -gen:both oder -gen:client mit SEI. Die Verwendung dieser Modi wird nur in Verbindung mit WSDL empfohlen.
#EN: You have specified : -gen:both or -gen:client with a model file created from a SEI. The use of these modes are recommended with WSDL or model files created from WSDL only.
wscompile.warning.modelfilemode=Sie haben angegeben : -gen:both oder -gen:client mit einer Modelldatei, die aus einer SEI erstellt wurde. Die Verwendung dieser Modi wird nur in Verbindung mit WSDL oder Modelldateien empfohlen, die aus WSDL erstellt wurden.
#EN: Feature flag {1} can not be used with {0} flag.
wscompile.conflictingFeatureRequest=Funktionsmarkierung {1} kann nicht mit Markierung {0} verwendet werden.
#EN: Invalid version specified with -source: {0}. Valid versions are 1.0.1, 1.0.3 or 1.1 (default)
wscompile.invalidTargetVersion=Ung\u00fcltige Version angegeben mit -source: {0}. G\u00fcltige Versionen sind 1.0.1, 1.0.3 oder 1.1 (Standard)
#EN: -source option not allowed while processing model: {0}. Ignoring -source option {1}
wscompile.warning.ignoringTargetVersionForModel=-source-Option nicht zul\u00e4ssig bei Verarbeitung von Modell: {0}. -source-Option wird ignoriert {1}
#EN: For source option: {0}, ignoring options: {1}
wscompile.conflictingFeature.sourceVersion=F\u00fcr source-Option: {0} Optionen werden ignoriert: {1}

#EN: Both \"unwrap\" and "\donotunwrap\" specified
wscompile.bothWrapperFlags=Sowohl \"unwrap\" als auch "\donotunwrap\" angegeben

