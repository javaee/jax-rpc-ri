#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#
# $Id: modeler.properties,v 1.1 2006-04-12 20:32:37 kohlert Exp $
#

# general
modeler.nestedModelError=modeler error: {0}

# RmiModeler
rmimodeler.cannot.instantiate=cannot instantiate class: {0}
rmimodeler.invalid.remote.interface=invalid remote interface: {0}
rmimodeler.class.not.found=class {0} not found.
rmimodeler.invalid.exception=exception \"{0}\" is unsupported.
rmimodeler.invalid.rmi.type=invalid type for JAX-RPC structure: {0}
rmimodeler.unexpected.type=unexpected type: {0}
rmimodeler.invalid.encoding=invalid encoding specified: {0}
rmimodeler.type.cannot.implement.remote=type cannot implement remote: {0}
rmimodeler.type.does.not.implement.serializable=type {0} does not implement serializable
rmimodeler.no.empty.constructor=class {0} does not have a public accessible empty constructor
rmimodeler.ambiguous.member=ambiguous member: {0}
rmimodeler.nestedRmiModelerError=RmiModeler error: {0}
rmimodeler.could.not.resolve.property.type=could not resolve property type: {0}
rmimodeler.property.setter.method.cant.be.overloaded=property setter \"{0}\" of type \"{1}\" on class \"{2}\" cannot be overloaded
rmimodeler.must.implement.remote=\
    invalid remote interface; class {0} is not an interfacee
rmimodeler.service.endpoint.must.be.interface=\
    invalid remote interface; class {0} does not directly implement a remote interface
rmimodeler.must.throw.remoteexception=\
    {0} is not a valid remote interface: method {1} must throw java.rmi.RemoteException
rmimodeler.javabean.property.has.public.member: class \"{0}\" cannot have a JavaBean property \"{1}\" and a public member of the same name.
rmimodeler.nested.inner.classes.not.supported=nested inner classes are not supported: {0}
rmimodeler.must.not.extend.runtimeexception=Service specific exceptions must not extend RuntimeException: {0}
rmimodeler.duplicate.type.name:Duplicate type name \"{0}\" for Java type \"{1}\" found
rmimodeler.field.not.found=Field \"{0}\" of Java class \"{1}\" not found.
rmimodeler.type.is.used.as.two.types=Type \"{0}\" is used as a \"{1}\" and a \"{2}\"
rmimodeler.no.literal.holders=Holders are not supported in document literal mode - Type: \"{0}\"
rmimodeler.type.is.not.supported={0} types are not supported in literal mode - Type: \"{1}\"
rmimodeler.object.is.not.supported=java.lang.Object is not supported in literal mode
rmimodeler.type.implements.more.than.one.interface=Type \"{0}\" implements more than one interface, interfaces: \"{1}\", \"{2}\" ...
rmimodeler.operation.name.clashes.with.type.name=The name of the operation \"{0}\" clashes with a type name.  You cannot use document/literal encoding for this service endpoint interface.
rmimodeler.type.not.strict.compliant=Type \"{0}\" is not required by the specification and cannot be used with the \"strictcompliance\" flag
rmimodeler.java.exceptions.not.allowed=Exceptions in the \"java.\" or \"javax.\" packages are not supported: \"{0}\"
rmimodeler.no.such.method=No such method \"{0}\" on class \"{1}\"

# WSDLModeler
wsdlmodeler.multipleOutputParameters=multiple \"out\" parameters in operation: {0}
wsdlmodeler.invalidOperation=invalid operation: {0}
wsdlmodeler.invalidState.modelingOperation=invalid state while modeling operation: {0}
wsdlmodeler.resultIsInOutParameter=result is \"inout\" parameter in operation: {0}
wsdlmodeler.invalid.parameterorder.parameter=\"{0}\" specified in the parameterOrder attribute of message \"{1}\" is not a valid part of the message.
wsdlmodeler.invalid.parameterOrder.tooManyUnmentionedParts=more than one part left out in the parameterOrder attribute of operation \"{0}\"
wsdlmodeler.invalid.parameter.differentTypes=parameter \"{0}\" of operation \"{1}\" appears with different types in the input and output messages
wsdlmodeler.invalid.bindingOperation.notInPortType=in binding \"{1}\", operation \"{0}\" does not appear in the corresponding port type
wsdlmodeler.invalid.bindingOperation.inputMissingSoapBody=input message of binding operation \"{0}\" does not have a SOAP body extension
wsdlmodeler.invalid.bindingOperation.outputMissingSoapBody=output message of binding operation \"{0}\" does not have a SOAP body extension
wsdlmodeler.invalid.bindingOperation.missingInputName=binding operation \"{0}\" must specify a name for its input message
wsdlmodeler.invalid.bindingOperation.missingOutputName=binding operation \"{0}\" must specify a name for its output message
wsdlmodeler.invalid.bindingOperation.multipleMatchingOperations=in binding \"{1}\", operation \"{0}\" does not reference a unique operation in the corresponding port type
wsdlmodeler.invalid.bindingOperation.notFound=in binding \"{1}\", operation \"{0}\" does not match any operation in the corresponding port type
wsdlmodeler.invalid.bindingOperation.inputSoapBody.missingNamespace=input message of binding operation \"{0}\" must specify a value for the \"namespace\" attribute
wsdlmodeler.invalid.bindingOperation.outputSoapBody.missingNamespace=output message of binding operation \"{0}\" must specify a value for the \"namespace\" attribute
wsdlmodeler.invalid.bindingOperation.inputHeader.missingNamespace=input header \"{1}\" of binding operation \"{0}\" must specify a value for the \"namespace\" attribute
wsdlmodeler.invalid.bindingOperation.outputHeader.missingNamespace=output header \"{1}\" of binding operation \"{0}\" must specify a value for the \"namespace\" attribute
wsdlmodeler.invalid.bindingFault.notUnique=fault \"{0}\" in operation \"{1}\" matches more than one fault in the corresponding port type operation
wsdlmodeler.invalid.bindingFault.notFound=fault \"{0}\" in operation \"{1}\" does not match any fault in the corresponding port type operation
wsdlmodeler.invalid.bindingFault.outputMissingSoapFault=fault \"{0}\" in operation \"{1}\" does not have a SOAP fault extension
wsdlmodeler.invalid.bindingFault.missingName=fault \"{0}\" in operation \"{1}\" must specify a value for the \"name\" attribute
wsdlmodeler.invalid.bindingFault.missingNamespace=fault \"{0}\" in operation \"{1}\" must specify a value for the \"namespace\" attribute
wsdlmodeler.invalid.bindingFault.emptyMessage=fault \"{0}\" refers to message \"{1}\", but the message has no parts
wsdlmodeler.invalid.bindingFault.messageHasMoreThanOnePart=fault \"{0}\" refers to message \"{1}\", but the message has more than one parts
wsdlmodeler.invalid.message.partMustHaveTypeDescriptor=in message \"{0}\", part \"{1}\" must specify a \"type\" attribute
wsdlmodeler.invalid.message.partMustHaveElementDescriptor=in message \"{0}\", part \"{1}\" must specify a \"element\" attribute
wsdlmodeler.invalid=invalid WSDL document
wsdlmodeler.unsolvableNamingConflicts=the following naming conflicts occurred: {0}
#
wsdlmodeler.warning.ignoringUnrecognizedSchemaExtension=ignoring schema element (unsupported version): {0}
wsdlmodeler.warning.searchSchema.unrecognizedTypes=encountered {0} unrecognized type(s)
wsdlmodeler.warning.noServiceDefinitionsFound=WSDL document does not define any services
wsdlmodeler.warning.noPortsInService=Service \"{0}\" does not contain any usable ports
wsdlmodeler.warning.noOperationsInPort=Port \"{0}\" does not contain any usable operations
wsdlmodeler.warning.ignoringNonSOAPPort=ignoring port \"{0}\": not a SOAP port
wsdlmodeler.warning.ignoringNonSOAPPort.noAddress=ignoring port \"{0}\": no SOAP address specified
wsdlmodeler.warning.ignoringSOAPBinding.nonHTTPTransport:ignoring SOAP port \"{0}\": unrecognized transport
wsdlmodeler.warning.ignoringOperation.notSupportedStyle=ignoring operation \"{0}\": not request-response or one-way
wsdlmodeler.warning.ignoringOperation.notEncoded=ignoring RPC-style operation \"{0}\": parameters are not encoded
wsdlmodeler.warning.ignoringOperation.cannotHandleBodyPartsAttribute=ignoring operation \"{0}\": cannot handle \"parts\" attribute of \"soap:body\" element
wsdlmodeler.warning.ignoringOperation.cannotHandleTypeMessagePart=ignoring operation \"{0}\": message part does not refer to a schema element declaration
wsdlmodeler.warning.ignoringOperation.cannotHandleElementMessagePart=ignoring operation \"{0}\": message part does not refer to a schema type declaration
wsdlmodeler.warning.ignoringOperation.cannotHandleDocumentStyle=ignoring operation \"{0}\": cannot handle document-style operations
wsdlmodeler.warning.ignoringFaults=ignoring faults declared by operation \"{0}\"
wsdlmodeler.warning.ignoringFault.notEncoded=ignoring literal fault \"{0}\" of binding operation \"{1}\"
wsdlmodeler.warning.ignoringFault.notLiteral=ignoring encoded fault \"{0}\" of binding operation \"{1}\"
wsdlmodeler.warning.ignoringHeader=ignoring header \"{0}\" of binding operation \"{1}\"
wsdlmodeler.warning.ignoringHeader.partFromBody=header part: \"{0}\" already bound by soapbind:body, illegal to bind the part twice
wsdlmodeler.warning.ignoringHeader.notLiteral=ignoring header \"{0}\" of binding operation \"{1}\": not literal
wsdlmodeler.warning.ignoringHeader.notFound=ignoring header \"{0}\" of binding operation \"{1}\": not found
wsdlmodeler.warning.ignoringHeader.cant.resolve.message=ignoring header \"{0}\" of binding operation \"{1}\": cannot resolve message
wsdlmodeler.warning.ignoringFault.cant.resolve.message=ignoring fault \"{0}\" of binding operation \"{1}\": cannot resolve message
wsdlmodeler.warning.ignoringHeader.notEncoded=ignoring header \"{0}\" of binding operation \"{1}\": not SOAP-encoded
wsdlmodeler.warning.ignoringHeader.inconsistentDefinition=ignoring header \"{0}\" of operation \"{1}\": part not found
#
wsdlmodeler.warning.ignoringOperation.notLiteral=ignoring document-style operation \"{0}\": parameters are not literal
wsdlmodeler.warning.ignoringOperation.cannotHandleMoreThanOnePartInInputMessage=ignoring operation \"{0}\": more than one part in input message
wsdlmodeler.warning.ignoringOperation.cannotHandleEmptyInputMessage=ignoring operation \"{0}\": input message is empty
wsdlmodeler.warning.ignoringOperation.cannotHandleMoreThanOnePartInOutputMessage=ignoring operation \"{0}\": more than one part in output message
wsdlmodeler.warning.ignoringOperation.cannotHandleEmptyOutputMessage=ignoring operation \"{0}\": output message is empty
wsdlmodeler.warning.ignoringOperation.conflictStyleInWSIMode=ignoring operation \"{0}\": binding style and operation style are conflicting
wsdlmodeler.warning.ignoringFault.documentOperation=ignoring fault \"{0}\" of document-style operation \"{1}\"
wsdlmodler.warning.operation.use=The WSDL used has operations with literal and encoded use. -f:searchschema is not supported for this scenario.
#wsdlmodeler.invalid.bindingFault.wrongSoapFaultName=The name of the SOAP fault extension does not match the name of the \"{0}\" fault in operation \"{1}\"
wsdlmodeler.invalid.bindingFault.wrongSoapFaultName=name of soap:fault \"{0}\" doesn''t match the name of wsdl:fault \"{1}\" in operation \"{2}\"
#wsdlmodeler.invalid.bindingFault.noSoapFaultName=The name of the SOAP fault extension is missing from the fault \"{0}\" in operation \"{1}\"
wsdlmodeler.invalid.bindingFault.noSoapFaultName=soap:fault name not specified, wsdl:fault \"{0}\" in operation \"{1}\"

wsdlmodeler.duplicate.fault.part.name=ignoring fault \"{0}\" of operation \"{1}\", part name \"{2}\" is not unique
wsdlmodeler.duplicate.fault.soap.name=ignoring fault \"{0}\" of operation \"{1}\", soap:fault name \"{2}\" is not unique
wsdlmodeler.warning.ignoringHeaderFault.notFound=ignoring header fault \"{0}\", cannot find part \"{1}\" in binding \"{2}\"

#wsi warnings
wsdlmodeler.warning.nonconforming.wsdl.import=Non conforming WS-I WSDL used for wsdl:import
wsdlmodeler.warning.nonconforming.wsdl.types=Non conforming WS-I WSDL used for wsdl:types
wsdlmodeler.warning.nonconforming.wsdl.use=Processing WS-I non conforming operation \"{0}\" with RPC-Style and SOAP-encoded

# optional parts
wsdlmodeler.error.partsNotFound=parts \"{0}\" not found in the message \"{1}\", wrong WSDL


# NoMetadataModeler
nometadatamodeler.error.noServiceDefinitionsFound=WSDL document does not define any services
nometadatamodeler.error.moreThanOneServiceDefinition=WSDL document defines more than one service
nometadatamodeler.error.incorrectServiceName=incorrect service name: \"{0}\"
nometadatamodeler.error.failedToProcessPort=failed to process port: \"{0}\"
nometadatamodeler.error.noPortsInService=service does not define any ports: \"{0}\"
nometadatamodeler.error.moreThanOnePortDefinition=service defines more than one port: \"{0}\"
nometadatamodeler.error.incorrectPortName=incorrect port name: \"{0}\"
nometadatamodeler.error.overloadedOperationsFound=port contains overloaded operations: \"{0}\"
nometadatamodeler.error.operationNotEncoded=operation is not SOAP-encoded: \"{0}\"
nometadatamodeler.outputParameterEncountered=operation requires output parameter(s): \"{0}\"
nometadatamodeler.error.incorrectFaultPartName=incorrect fault part name for fault \"{1}\" of operation \"{0}\": \"{2}\"
nometadatamodeler.error.incorrectFaultPartType=incorrect fault part type for fault \"{1}\" of operation \"{0}\": \"{2}\"
nometadatamodeler.duplicateMethodSignature=duplicate method signature encountered: \"{0}\"
nometadatamodeler.error.classNotFound=class not found: {0}
nometadatamodeler.error.cannotMapNamespace=cannot map namespace URI: \"{0}\"
nometadatamodeler.error.methodNotFound=method \"{0}\" not found (or found with incorrect signature) in class: \"{1}\"
nometadatamodeler.error.constructorNotFound=constructor not found (or found with incorrect signature) in class: \"{0}\"
nometadatamodeler.error.exceptionNotFound=method \"{0}\" should throw exception: \"{0}\"
nometadatamodeler.error.notServiceInterface=not a Service interface: \"{0}\"
nometadatamodeler.error.notRemoteInterface=not a Remote interface: \"{0}\"
nometadatamodeler.error.holderDetected=holder types are invalid in this context
nometadatamodeler.error.nestedArrayDetected=nested array types are invalid in this context

#WSI-BP1.0 Warning/Errors
wsdlmodeler.warning.r2716=R2716 WSI-BasicProfile ver. 1.0, namespace attribute not allowed in doc/lit for {0}: \"{1}\"
wsdlmodeler.warning.r2716r2726=R2716/R2726 WSI-BasicProfile ver. 1.0, namespace attribute not allowed in doc/lit or rpc/lit for {0}: \"{1}\"

#WSI-BP 1.1 Warning/Errors
//R2911
mimemodeler.invalidMimePart.moreThanOneSOAPBody=Ignoring operation \"{0}\". The Multipart/Related structure has invalid root part: more than one soap:body parts found

//R2906
mimemodeler.warning.IgnoringinvalidHeaderPart.notDeclaredInRootPart=Headers not in root mime:part with soap:body, ignoring headers in operation \"{0}\"

//R2909
mimemodeler.invalidMimeContent.differentPart=Ignoring the mime:part. Invalid mime:part, the mime:content has different part attribute.

mimemodeler.invalidMimeContent.invalidSchemaType=Ignoring the mime:part. mime part: {0} can not be mapped to schema type: {1}

//Rxxxx A mime:content in a DESCRIPTION MUST refer to a wsdl:part element defined using the type attribute.
mimemodeler.invalidMimeContent.mesagePartElementKind=wsdl:part element referenced by mime:content part attribute: {0} must be defined using type attribute!

//RXXXX RYYYY: In a description, a mime:content element MUST include the part attribute.
mimemodeler.invalidMimeContent.missingPartAttribute=Ignoring operation \"{0}\", missing part attribute in mime:content. part attribute must be present in mime:content declaration. 

mimemodeler.invalidMimeContent.missingTypeAttribute=Missing type attribute in mime:content in operation \"{0}\". part attribute must be present in mime:content declaration. 

//unknown schematype
mimemodeler.invalidMimeContent.unknownSchemaType=Unknown schema type: {1} for mime:content part: {0}

//missing wsdl:part referenced by the mime:content
wsdlmodeler.warning.ignoringMimePart.notFound=ignoring mime:part, cannot find part \"{0}\" referenced by the mime:content in the wsdl:operation \"{1}\"

mimemodeler.elementPart.invalidElementMimeType=The mime:content part refers to wsdl:part \"{0}\", defined using element attribute. Please make sure the mime type: \"{1}\" is appropriate to serialize XML.

//R2708 The mime:part element in a DESCRIPTION MUST NOT have a name attribute. 
mimemodeler.invalidMimePart.nameNotAllowed=name attribute on wsdl:part in Operation \"{0}\" is ignored. Its not allowed as per WS-I AP 1.0.

