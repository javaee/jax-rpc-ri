#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#
# $Id: dii_zh_TW.properties,v 1.1 2006-04-12 20:32:18 kohlert Exp $
#
#EN: service error: {0}
service.exception.nested=\u670d\u52d9\u932f\u8aa4\uff1a{0}
#EN: not an interface: {0}
service.interface.required=\u4e0d\u662f\u4ecb\u9762\uff1a{0}
#EN: cannot locate service implementation class for service: {0}
service.implementation.not.found=\u7121\u6cd5\u70ba\u670d\u52d9\u5c0b\u627e\u670d\u52d9\u5be6\u4f5c\u985e\u5225\uff1a{0}
#EN: failed to create service implementation instance: {0}
service.implementation.cannot.create=\u7121\u6cd5\u5efa\u7acb\u670d\u52d9\u5be6\u4f5c\u5be6\u4f8b\uff1a{0}
#EN: dynamic invocation error: {0}
dii.exception.nested=\u52d5\u614b\u547c\u53eb\u932f\u8aa4\uff1a{0}
#EN: service: {0} does not contain port: {1}
dii.service.does.not.contain.port=\u670d\u52d9\uff1a{0} \u4e0d\u5305\u542b\u9023\u63a5\u57e0\uff1a{1}
#EN: port: {0} does not contain operation: {1}
dii.port.does.not.contain.operation=\u9023\u63a5\u57e0\uff1a{0} \u4e0d\u5305\u542b\u4f5c\u696d\uff1a{1}
#EN: property: "{0}" must be set on a Call object before it can be invoked in this configuration
dii.required.property.not.set=\u7279\u6027\uff1a"{0}" \u5fc5\u9808\u5148\u5728 Call \u7269\u4ef6\u4e0a\u8a2d\u5b9a\uff0c\u7136\u5f8c\u624d\u80fd\u5728\u8a72\u914d\u7f6e\u4e2d\u547c\u53eb\u6b64\u7279\u6027\u3002
#EN: no serializer/deserializer could be found for parameter number: {0}, named: "{1}", class: {2}, type: "{3}"
dii.parameter.type.unknown=\u627e\u4e0d\u5230\u7528\u65bc\u53c3\u6578\u6578\u5b57\uff1a{0} \u7684\u4e32\u5217\u5316\u7a0b\u5f0f/\u53d6\u6d88\u4e32\u5217\u5316\u7a0b\u5f0f\uff0c\u540d\u70ba\uff1a"{1}"\uff0c\u985e\u5225\uff1a{2}\uff0c\u985e\u578b\uff1a"{3}"
#EN: the serializer/deserializer for parameter number: {0}, named: "{1}", type: "{2}", is ambiguous because its class could not be determined
dii.parameter.type.ambiguous.no.class=\u7528\u65bc\u53c3\u6578\u6578\u5b57\u7684\u4e32\u5217\u5316\u7a0b\u5f0f/\u53d6\u6d88\u4e32\u5217\u5316\u7a0b\u5f0f\uff1a{0}\uff0c\u540d\u70ba\uff1a"{1}"\uff0c\u985e\u578b\uff1a"{2}"\uff0c\u7a0b\u5f0f\u4e0d\u660e\uff0c\u56e0\u70ba\u7121\u6cd5\u78ba\u5b9a\u5176\u985e\u5225
#EN: the serializer/deserializer for parameter number: {0}, named: "{1}", class: {2}, is ambiguous because its XML type could not be determined
dii.parameter.type.ambiguous.no.typename=\u7528\u65bc\u53c3\u6578\u6578\u5b57\uff1a{0} \u7684\u4e32\u5217\u5316\u7a0b\u5f0f/\u53d6\u6d88\u4e32\u5217\u5316\u7a0b\u5f0f\uff0c\u540d\u70ba\uff1a"{1}"\uff0c\u985e\u5225\uff1a{2}\uff0c\u7a0b\u5f0f\u4e0d\u660e\uff0c\u56e0\u70ba\u7121\u6cd5\u78ba\u5b9a\u5176 XML \u985e\u578b
#EN: the serializer/deserializer for parameter number: {0}, named: "{1}" cannot be found because no class or XML type could be determined for it
dii.parameter.type.underspecified=\u7528\u65bc\u53c3\u6578\u6578\u5b57\uff1a{0} \u7684\u4e32\u5217\u5316\u7a0b\u5f0f/\u53d6\u6d88\u4e32\u5217\u5316\u7a0b\u5f0f\uff0c\u540d\u70ba\uff1a"{1}"\uff0c\u7a0b\u5f0f\u627e\u4e0d\u5230\uff0c\u56e0\u70ba\u7121\u6cd5\u78ba\u5b9a\u5176\u985e\u5225\u6216 XML \u985e\u578b
#EN: expected only {0} parameter(s)
dii.parameter.count.exceeded=\u50c5\u9810\u671f {0} \u500b\u53c3\u6578
#EN: encoding style "{0}" not found in type registry
dii.typeregistry.encodingstyle.unrecognized=\u5728\u985e\u578b\u8a3b\u518a\u4e2d\u627e\u4e0d\u5230\u7de8\u78bc\u6a23\u5f0f "{0}"
#EN: call object cannot be created without a TypeRegistry
dii.typeregistry.missing.in.call=\u6c92\u6709 TypeRegistry\uff0c\u7121\u6cd5\u5efa\u7acb Call \u7269\u4ef6
#EN: cannot set unrecognized property: {0} on a Call object
dii.call.property.set.unrecognized=\u7121\u6cd5\u5728 Call \u7269\u4ef6\u4e0a\u8a2d\u5b9a\u672a\u88ab\u8a8d\u53ef\u7684\u7279\u6027\uff1a{0}
#EN: cannot get unrecognized property: {0} on a Call object
dii.call.property.get.unrecognized=\u7121\u6cd5\u5728 Call \u7269\u4ef6\u4e0a\u53d6\u5f97\u672a\u88ab\u8a8d\u53ef\u7684\u7279\u6027\uff1a{0}
#EN: service cannot create Call object until a TypeRegistry has been set using setTypeMappingRegistry()
dii.service.cant.create.call.without.registry=\u5fc5\u9808\u4f7f\u7528 setTypeMappingRegistry() \u8a2d\u5b9a\u4e86 TypeRegistry\uff0c\u670d\u52d9\u624d\u80fd\u5efa\u7acb Call \u7269\u4ef6
#EN: number of parameter types does not match number of parameter names for method: {0}
dii.service.cant.create.proxy.parameter.name.type.mismatch=\u53c3\u6578\u985e\u578b\u7684\u6578\u76ee\u8207\u65b9\u6cd5\u7684\u53c3\u6578\u540d\u7a31\u6578\u76ee\u4e0d\u76f8\u7b26\uff1a{0}
#EN: WSDL data missing, this operation is not available
dii.service.no.wsdl.available=\u7f3a\u5c11 WSDL \u8cc7\u6599\uff0c\u8a72\u4f5c\u696d\u4e0d\u53ef\u7528
#EN: parameter was expected to be of type: {0} but was of type: {1} instead
dii.parameter.invalid.type=\u9810\u671f\u7684\u53c3\u6578\u985e\u578b\u70ba {0}\uff0c\u4f46\u5be6\u969b\u985e\u578b\u537b\u70ba {1}
#EN: output parameters are only available after Invoke() has been called
dii.outparameters.not.available=\u50c5\u5728\u547c\u53eb Invoke() \u4e4b\u5f8c\uff0c\u624d\u53ef\u4f7f\u7528\u8f38\u51fa\u53c3\u6578
#EN: cannot set parameter or return types on this Call object
dii.parameterandreturntypespec.not.allowed=\u7121\u6cd5\u5728\u6b64 Call \u7269\u4ef6\u4e0a\u8a2d\u5b9a\u53c3\u6578\u6216\u50b3\u56de\u985e\u578b
#EN: operation style: "{0}" not supported
dii.operation.style.unsupported=\u4f5c\u696d\u6a23\u5f0f\uff1a\u4e0d\u652f\u63f4 "{0}"
#EN: encoding style: "{0}" not supported
dii.encoding.style.unsupported=\u7de8\u78bc\u6a23\u5f0f\uff1a\u4e0d\u652f\u63f4 "{0}"
#EN: could not find service: {0} in the specified WSDL file. The service names found were: {1}
dii.wsdl.service.unknown=\u5728\u6307\u5b9a\u7684 WSDL \u6a94\u6848\u4e2d\u627e\u4e0d\u5230\u670d\u52d9 {0}\u3002\u627e\u5230\u7684\u670d\u52d9\u540d\u7a31\u70ba\uff1a{1}
#EN: could not dispatch to method: {0} known methods are: {1}
dii.dynamicproxy.method.unrecognized=\u7121\u6cd5\u6d3e\u9001\u81f3\u65b9\u6cd5\uff1a{0} \u5df2\u77e5\u7684\u65b9\u6cd5\u70ba\uff1a{1}
